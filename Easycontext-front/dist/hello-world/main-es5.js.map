{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/admin/admin.component.ts","webpack:///src/app/components/admin/admin.component.html","webpack:///src/app/components/context-extract/context-extract.component.ts","webpack:///src/app/components/context-extract/context-extract.component.html","webpack:///src/app/components/download/download.component.ts","webpack:///src/app/components/download/download.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/sidebar/sidebar.component.ts","webpack:///src/app/components/sidebar/sidebar.component.html","webpack:///src/app/components/summarize/summarize.component.ts","webpack:///src/app/components/summarize/summarize.component.html","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","isAuth","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AdminComponent","ContextExtractComponent","fb","extractdata","router","formControls","texte","required","maxLength","formControls2","file","TextForm","group","fileForm","context","text","user_id","contexte","keyword0","keyword1","keyword2","keyword3","keyword4","keyword5","keyword6","keyword7","keyword8","keyword9","load","res","txt","token","localStorage","getItem","helper","decodedToken","decodeToken","console","log","Contextextraction","subscribe","result","json","JSON","parse","stringify","error","fileList","fileReader","FileReader","self","onloadend","x","readAsText","navigate","get","onChange","DownloadComponent","FooterComponent","HeaderComponent","authSerivce","routeReuseStrategy","shouldReuseRoute","mySubscription","events","event","navigated","isAuthenticated","unsubscribe","removeItem","logout","HomeComponent","name","LoginComponent","_as","isAdmin","isStudent","studentId","username","password","minLength","loginForm","loginn","loginUser","alert","setItem","window","location","href","login","RegisterComponent","userService","pattern","email","repassword","registerForm","register","registerUser","response","navigateByUrl","Register","SidebarComponent","SummarizeComponent","summarizedata","summary","summarize","posttext","AuthGuardService","auth","AuthService","http","jwtHelper","user","post","isTokenExpired","role","clear","providedIn","UserService","userData","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAcA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAC,EADP;AAEEC,eAAS,EAAC;AAFZ,KADqB,EAKrB;AACED,UAAI,EAAE,OADR;AAEEC,eAAS,EAAG,gFAFd;AAGEC,iBAAW,EAAG,CAAC,6EAAD;AAHhB,KALqB,EAWrB;AACEF,UAAI,EAAG,OADT;AAEEC,eAAS,EAAE;AAFb,KAXqB,EAgBrB;AACED,UAAI,EAAG,UADT;AAEEC,eAAS,EAAC;AAFZ,KAhBqB,EAoBrB;AACED,UAAI,EAAG,WADT;AAEEC,eAAS,EAAC,4FAFZ;AAGEC,iBAAW,EAAG,CAAC,6EAAD;AAHhB,KApBqB,EAyBrB;AACEF,UAAI,EAAG,UADT;AAEEC,eAAS,EAAC,yFAFZ;AAGEC,iBAAW,EAAG,CAAC,6EAAD;AAHhB,KAzBqB,EA8BrB;AACEF,UAAI,EAAE,mBADR;AAEEC,eAAS,EAAG,6GAFd;AAGEC,iBAAW,EAAG,CAAC,6EAAD;AAHhB,KA9BqB,EAmCrB;AACEF,UAAI,EAAG,IADT;AAEEC,eAAS,EAAG;AAFd,KAnCqB,EAuCrB;AACED,UAAI,EAAG,QADT;AACmBG,gBAAU,EAAG;AADhC,KAvCqB,CAAvB;;QAkDaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AChE7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaU,Y,GAEX;AAAA;;AAGA,WAAAC,KAAA,GAAQ,aAAR;AAFE,WAAKC,MAAL,GAAY,KAAZ;AACD,K;;;uBAJUF,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,8B;AAAA;AAAA;ACPzB;;AAEA;;AAEA;;AAEA;;AACA;;;;;;;;;sEDAaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTG,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmDaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,8EAAD,C;AAAkB,gBARpB,CACP,uEADO,EAEP,0EAFO,EAGP,oEAHO,EAIP,kEAJO,EAKP,0DALO,EAMP,qEANO,CAQoB;;;;0HAGlBA,S,EAAS;AAAA,uBA1BlB,2DA0BkB,EAzBlB,gFAyBkB,EAxBlB,6EAwBkB,EAvBlB,mFAuBkB,EAtBlB,yFAsBkB,EArBlB,6FAqBkB,EApBlB,0FAoBkB,EAnBlB,uFAmBkB,EAlBlB,8GAkBkB,EAjBlB,oFAiBkB,EAhBlB,iFAgBkB;AAhBJ,kBAMd,uEANc,EAOd,0EAPc,EAQd,oEARc,EASd,kEATc,EAUd,0DAVc,EAWd,qEAXc;AAgBI,O;AALF,K;;;;;sEAKPA,S,EAAS;cA5BrB,sDA4BqB;eA5BZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,gFAFY,EAGZ,6EAHY,EAIZ,mFAJY,EAKZ,yFALY,EAMZ,6FANY,EAOZ,0FAPY,EAQZ,uFARY,EASZ,8GATY,EAUZ,oFAVY,EAWZ,iFAXY,CADN;AAiBRR,iBAAO,EAAE,CACP,uEADO,EAEP,0EAFO,EAGP,oEAHO,EAIP,kEAJO,EAKP,0DALO,EAMP,qEANO,CAjBD;AAyBRS,mBAAS,EAAE,CAAC,8EAAD,CAzBH;AA0BRC,mBAAS,EAAE,CAAC,2DAAD;AA1BH,S;AA4BY,Q;;;;;;;;;;;;;;;;;;ACnDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,c;;;AAEX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA;AAAA;ACP3B;;;;;;;;;sEDOaA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTP,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsCgC;;AAAmE;;AAAa;;;;;;AAChF;;AAAoE;;AAA4C;;;;;;AAFpH;;AACI;;AACA;;AACJ;;;;;;AAFW;;AAAA;;AACA;;AAAA;;;;;;AAwC/B;;AACI;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAAG;;AAAuB;;AAC9B;;;;;;;;AAEA;;AAEI;;AACI;;AACI;;AAAgB;;AAEpB;;AACA;;AAGI;;AAAiF;;AAAqB;;AAU1G;;AAGJ;;AAGA;;AACI;;AAA8E;;AAAW;;AACzF;;AACI;;AAA4F;;AAAoB;;AAChH;;AAAwE;;AAAoB;;AAC5F;;AAA0E;;AAAoB;;AAC9F;;AAAwE;;AAAoB;;AAC5F;;AAAuE;;AAAoB;;AAC3F;;AAAwE;;AAAoB;;AAC5F;;AAAqE;;AAAoB;;AACzF;;AAAiG;;AAAoB;;AACrH;;AAAqE;;AAAoB;;AACzF;;AAAkG;;AAAoB;;AAW1H;;AAEA;;AAAM;AAAA;;AAAA;;AAAA;AAAA;;AACF;;AAAgF;;AAAwB;;AAC5G;;AACJ;;AAEJ;;;;;;AA9C6F;;AAAA;;AAmBW;;AAAA;;AACpB;;AAAA;;AACE;;AAAA;;AACF;;AAAA;;AACD;;AAAA;;AACC;;AAAA;;AACH;;AAAA;;AAC4B;;AAAA;;AAC5B;;AAAA;;AAC6B;;AAAA;;;;QDtHzGM,uB;;;AAOX,uCAAoBC,EAApB,EAA4CC,WAA5C,EAA4EC,MAA5E,EAA6F;AAAA;;AAAzE,aAAAF,EAAA,GAAAA,EAAA;AAAwB,aAAAC,WAAA,GAAAA,WAAA;AAAgC,aAAAC,MAAA,GAAAA,MAAA;AAC1E,YAAIC,YAAY,GAAG;AACnBC,eAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACzB,0DAAWC,QADc,EAEzB,0DAAWC,SAAX,CAAqB,KAArB,CAFyB,CAApB;AADY,SAAnB;AAMF,YAAIC,aAAa,GAAG;AACnBC,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACxB;AACA;AAFwB,WAApB;AADa,SAApB;AAOC,aAAKC,QAAL,GAAgBT,EAAE,CAACU,KAAH,CAASP,YAAT,CAAhB;AACA,aAAKQ,QAAL,GAAcX,EAAE,CAACU,KAAH,CAASH,aAAT,CAAd;AACA;;;;mCAIO;AACN,eAAKK,OAAL,GAAc;AACZC,gBAAI,EAAE,EADM;AAEZC,mBAAO,EAAC,EAFI;AAGZC,oBAAQ,EAAC,EAHG;AAIZC,oBAAQ,EAAC,EAJG;AAKZC,oBAAQ,EAAC,EALG;AAMZC,oBAAQ,EAAC,EANG;AAOZC,oBAAQ,EAAC,EAPG;AAQZC,oBAAQ,EAAC,EARG;AASZC,oBAAQ,EAAC,EATG;AAUZC,oBAAQ,EAAC,EAVG;AAWZC,oBAAQ,EAAC,EAXG;AAYZC,oBAAQ,EAAC,EAZG;AAaZC,oBAAQ,EAAC;AAbG,WAAd;AAeA,eAAKC,IAAL,GAAU,KAAV;AACA,eAAKC,GAAL,GAAS,KAAT;AACD;;;4CACgB;AAAA;;AACf,eAAKD,IAAL,GAAU,IAAV;AAEA,eAAKE,GAAL,GAAS,KAAKhB,OAAL,CAAa,MAAb,CAAT;AACA,cAAIiB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,cAAMC,MAAM,GAAG,IAAI,mEAAJ,EAAf;AAEA,cAAMC,YAAY,GAAGD,MAAM,CAACE,WAAP,CAAmBL,KAAnB,CAArB;AACA,eAAKjB,OAAL,CAAa,SAAb,IAAwBqB,YAAY,CAACnB,OAArC;AACAqB,iBAAO,CAACC,GAAR,CAAY,KAAKxB,OAAL,CAAa,SAAb,CAAZ;AACA,eAAKX,WAAL,CAAiBoC,iBAAjB,CAAmC,KAAKzB,OAAxC,EAAiD0B,SAAjD,CACC,UAAAC,MAAM,EAAI;AACT,iBAAI,CAACb,IAAL,GAAU,KAAV;AACA,iBAAI,CAACC,GAAL,GAAS,IAAT;AAEC,gBAAIa,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,MAAf,CAAX,CAAX,CAJQ,CAIsC;AAC9C;AACA;;AACA,iBAAI,CAAC3B,OAAL,GAAe;AACdC,kBAAI,EAAE,KAAI,CAACe,GADG;AAEdb,sBAAQ,EAAEyB,IAAI,CAAC,SAAD,CAAJ,CAAgB,CAAhB,EAAmB,WAAnB,CAFI;AAGdxB,sBAAQ,EAAEwB,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,MAApB,CAHI;AAIdvB,sBAAQ,EAAEuB,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,MAApB,CAJI;AAKdtB,sBAAQ,EAAEsB,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,MAApB,CALI;AAMdrB,sBAAQ,EAAEqB,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,MAApB,CANI;AAOdpB,sBAAQ,EAAEoB,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,MAApB,CAPI;AAQdnB,sBAAQ,EAAEmB,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,MAApB,CARI;AASdlB,sBAAQ,EAAEkB,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,MAApB,CATI;AAUdjB,sBAAQ,EAAEiB,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,MAApB,CAVI;AAWdhB,sBAAQ,EAAEgB,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,MAApB,CAXI;AAYdf,sBAAQ,EAAEe,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,MAApB;AAZI,aAAf;AAiBD,WAzBF,EA0BC,UAAAI,KAAK,EAAI;AACPT,mBAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,WA5BF;AA+BD;;;iCACeC,Q,EAAkB;AAChC,cAAIrC,IAAI,GAAGqC,QAAQ,CAAC,CAAD,CAAnB;AACA,cAAIC,UAAU,GAAe,IAAIC,UAAJ,EAA7B;AACA,cAAIC,IAAI,GAAG,IAAX;;AACAF,oBAAU,CAACG,SAAX,GAAuB,UAASC,CAAT,EAAY;AACjCF,gBAAI,CAACpC,OAAL,CAAaC,IAAb,GAAoBiC,UAAU,CAACP,MAA/B;AACD,WAFD;;AAGAO,oBAAU,CAACK,UAAX,CAAsB3C,IAAtB;AACD;;;8BAEA;AAED,eAAKN,MAAL,CAAYkD,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD;;;4BA5Ea;AAAE,iBAAO,KAAK3C,QAAL,CAAc4C,GAAd,CAAkB,OAAlB,CAAP;AAAoC;;;;;;;uBAzBvCtD,uB,EAAuB,2H,EAAA,0I,EAAA,uH;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,e;AAAA,a;AAAA,ioG;AAAA;AAAA;ACXpC;;AAEI;;AAGA;;AAEI;;AAAiB;;AAAkB;;AACnC;;AAAG;;AACH;;AAEA;;AACI;;AACI;;AACI;;AACI;;AAEI;;AAA+C;;AACnD;;AACJ;;AAEA;;AACI;;AACI;;AACgB;;AACpB;;AACJ;;AACJ;;AAIA;;AAA6B;AAAA,mBAAY,IAAAsC,iBAAA,EAAZ;AAA+B,WAA/B;;AACzB;;AAEI;;AAEI;;AAAyL;AAAA;AAAA;;AAAsE;;AAC/P;;AAIJ;;AAEA;;AAEI;;AACI;;AAAgD;;AAAM;;AAC1D;;AACV;;AAAmD;;AAAgB;;AAE7D;;AACJ;;AACJ;;AAEA;;AACI;;AAA6B;AAAA,mBAAY,IAAAA,iBAAA,EAAZ;AAA+B,WAA/B;;AAEzB;;AAAmB;AAAA,mBAAU,IAAAiB,QAAA,qBAAV;AAAuC,WAAvC;;AAAnB;;AAEA;;AACI;;AAEJ;;AAAkB;;AAClB;;AAEA;;AACI;;AACV;;AAAgD;;AAAM;;AAE5C;;AACV;;AAAoD;;AAAgB;;AAE9D;;AACJ;;AAEJ;;AAEJ;;AACJ;;AACA;;AAYA;;AA2DJ;;AACJ;;;;AAxHsB;;AAAA;;AAK+L;;AAAA;;AACpL;;AAAA;;AAUiB;;AAAA;;AAQxB;;AAAA;;AAOF;;AAAA;;AAO0B;;AAAA;;AAUrC;;AAAA;;AAYA;;AAAA;;;;;;;;;sEDhFAvD,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTR,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEXpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa8D,iB;;;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA;AAAA;ACP9B;;AAAK;;AAAe;;;;;;;;sEDOPA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACThE,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa+D,e;;;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,2K;AAAA;AAAA;ACP5B;;AACI;;AACI;;AACE;;AACJ;;AAEF;;AAEJ;;;;;;;;sEDDaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTjE,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACWY;;AAAwF;;AAA8B;;AAA0D;;AAAK;;;;AAAvI;;;;;;;;;;AAI9C;;AAA4F;;AAAkC;;AAAQ;;;;AAAvF;;;;;;AAI/C;;AACI;;AAA4B;;AAChC;;;;;;;;;;;;;;;;QDZCgE,e;;;AAIX,+BAAmBC,WAAnB,EAAsDxD,MAAtD,EAAuE;AAAA;;AAAA;;AAApD,aAAAwD,WAAA,GAAAA,WAAA;AAAmC,aAAAxD,MAAA,GAAAA,MAAA;;AACpD,aAAKA,MAAL,CAAYyD,kBAAZ,CAA+BC,gBAA/B,GAAkD,YAAY;AAC5D,iBAAO,KAAP;AACD,SAFD;;AAGA,aAAKC,cAAL,GAAsB,KAAK3D,MAAL,CAAY4D,MAAZ,CAAmBxB,SAAnB,CAA6B,UAACyB,KAAD,EAAW;AAC5D,cAAIA,KAAK,YAAY,6DAArB,EAAoC;AAClC;AACA,kBAAI,CAAC7D,MAAL,CAAY8D,SAAZ,GAAwB,KAAxB;AACD;AACF,SALqB,CAAtB;AAMA;;;;mCAEM;AACN7B,iBAAO,CAACC,GAAR,CAAY,KAAKsB,WAAL,CAAiBO,eAAjB,EAAZ,EADM,CAEN;;AAEA,eAAK3E,MAAL,GAAc,KAAKoE,WAAL,CAAiBO,eAAjB,EAAd;AACD;;;sCAGa;AACZ,cAAI,KAAKJ,cAAT,EAAyB;AACvB,iBAAKA,cAAL,CAAoBK,WAApB;AACD;AACF;;;iCACQ;AACPpC,sBAAY,CAACqC,UAAb,CAAwB,OAAxB;AACA,eAAKjE,MAAL,CAAYkD,QAAZ,CAAqB,CAAC,QAAD,CAArB;AAEH;;;;;;;uBAjCYK,e,EAAe,mI,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,4wC;AAAA;AAAA;ACT5B;;AAGI;;AACI;;AAAsC;;AAC1C;;AACA;;AAII;;AACI;;AACJ;;AAEA;;AACI;;AACJ;;AAEA;;AACI;;AAGA;;AACI;;AAAsD;;AAAU;;AAChE;;AAA0D;;AAAkB;;AAC5E;;AAAsD;AAAA,mBAAS,IAAAW,MAAA,EAAT;AAAkB,WAAlB;;AAAqB;;AAA2C;;AAAM;;AAEhI;;AACJ;;AACJ;;AACJ;;;;AA3BS;;AAAA;;AAQ2E;;AAAA;;AAII;;AAAA;;AAIwB;;AAAA;;AAIvE;;AAAA;;AACC;;AAAA;;;;;;;;;sEDf7BX,e,EAAe;cAL3B,uDAK2B;eALjB;AACTlE,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;QAOa4E,a;;;AAIX,+BAAc;AAAA;;AAFd,aAAAC,IAAA,GAAO,aAAP;AAEiB;;;;mCAET,CACP;;;;;;;uBAPUD,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,oc;AAAA;AAAA;ACN1B;;AAEA;;AACI;;AACI;;AACA;;AACI;;AACI;;AAAwB;;AAAuB;;AAC/C;;AACJ;;AACA;;AAAE;;AACN;;AACA;;AACI;;AACI;;AACI;;AAA+C;;AAC/C;;AAEJ;;AACA;;AACI;;AACI;;AAAuD;;AACnD;;AAA2C;;AAC3C;;AAEJ;;AACJ;;AAEA;;AACI;;AAA+C;;AAC3C;;AAA2C;;AAAe;;AAE9D;;AACJ;;AAEJ;;AACJ;;AACJ;;AACA;;AApCR;;AAFA;;;;AAqByC;;AAAA;;AAQA;;AAAA;;;;;;;;;sEDvB5BA,a,EAAa;cALzB,uDAKyB;eALf;AACT9E,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACuBgB;;AAAsE;;AAAiB;;;;;;AACvF;;AAAuE;;AAAgB;;;;;;AAF3F;;AACI;;AACA;;AACJ;;;;;;AAFW;;AAAA;;AACA;;AAAA;;;;;;;;QDXV8E,c;;;AAIX,8BAAoBvE,EAApB,EAA8CwE,GAA9C,EAAwEtE,MAAxE,EAAwF;AAAA;;AAApE,aAAAF,EAAA,GAAAA,EAAA;AAA0B,aAAAwE,GAAA,GAAAA,GAAA;AAA0B,aAAAtE,MAAA,GAAAA,MAAA;AACtE,YAAI2B,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AACA,YAAIF,KAAJ,EAAW;AACT,cAAI2C,GAAG,CAACC,OAAJ,EAAJ,EAAmB;AACjBvE,kBAAM,CAACkD,QAAP,CAAgB,CAAC,QAAD,CAAhB;AACD,WAFD,MAEO,IAAIoB,GAAG,CAACE,SAAJ,EAAJ,EAAqB;AAC1B,gBAAM1C,MAAM,GAAG,IAAI,mEAAJ,EAAf;AACA,gBAAM2C,SAAS,GAAG3C,MAAM,CAACE,WAAP,CAAmBL,KAAnB,EAA0B8C,SAA5C;AACAzE,kBAAM,CAACkD,QAAP,CAAgB,CAAC,oBAAD,EAAuBuB,SAAvB,CAAhB;AACD;AACF;;AACD,YAAIxE,YAAY,GAAG;AACjByE,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAmB,CAC3B,0DAAWvE,QADgB,CAAnB,CADO;AAKjBwE,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAmB,CAC3B,0DAAWxE,QADgB,EAE3B,0DAAWyE,SAAX,CAAqB,CAArB,CAF2B,CAAnB;AALO,SAAnB;AAWA,aAAKC,SAAL,GAAiB/E,EAAE,CAACU,KAAH,CAASP,YAAT,CAAjB;AACD,O,CAED;;;;;mCAKQ;AACN,eAAK6E,MAAL,GAAc;AACZJ,oBAAQ,EAAE,EADE;AAEZC,oBAAQ,EAAE;AAFE,WAAd;AAID;;;gCAEO;AAAA;;AACN;AACA;AAEA,eAAKL,GAAL,CAASS,SAAT,CAAmB,KAAKD,MAAxB,EAAgC1C,SAAhC,CAEE,UAAAC,MAAM,EAAI;AACR2C,iBAAK,CAAC,UAAS,MAAI,CAACF,MAAL,CAAYJ,QAArB,GAAgC,gCAAjC,CAAL,CADQ,CAER;AACA;;AACA,gBAAI/C,KAAK,GAAGU,MAAM,CAAC,OAAD,CAAlB,CAJQ,CAKR;;AACAT,wBAAY,CAACqD,OAAb,CAAqB,OAArB,EAA8BtD,KAA9B;;AACA,kBAAI,CAAC2C,GAAL,CAASP,eAAT;;AACA,gBAAMjC,MAAM,GAAG,IAAI,mEAAJ,EAAf;AAEA,gBAAMC,YAAY,GAAGD,MAAM,CAACE,WAAP,CAAmBL,KAAnB,CAArB;;AACA,gBAAII,YAAY,CAACnB,OAAb,IAAwB,CAA5B,EAA8B;AAC5BsE,oBAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,8BAAvB;AACD,aAFD,MAGI;AACFF,oBAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,wBAAvB;AACD;AACF,WAnBH,EAoBE,UAAA1C,KAAK,EAAI;AACPsC,iBAAK,CAAC,mCAAD,CAAL;;AACA,kBAAI,CAAChF,MAAL,CAAYkD,QAAZ,CAAqB,CAAC,QAAD,CAArB;;AACAjB,mBAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,WAxBH;AA2BD;;;4BA1CW;AAAG,iBAAO,KAAKmC,SAAL,CAAe1B,GAAf,CAAmB,UAAnB,CAAP;AAAuC;;;4BAC1C;AAAG,iBAAO,KAAK0B,SAAL,CAAe1B,GAAf,CAAmB,UAAnB,CAAP;AAAuC;;;;;;;uBA/B3CkB,c,EAAc,2H,EAAA,0I,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,67B;AAAA;AAAA;ACb3B;;AAEI;;AAAkD;AAAA,mBAAY,IAAAgB,KAAA,EAAZ;AAAmB,WAAnB;;AAE9C;;AACI;;AAAuC;;AAAU;;AACjD;;AAAI;;AAAuF;;AAC/F;;AAGA;;AACI;;AAAgH;AAAA;AAAA;;AAAhH;;AACA;;AAA2B;;AAAQ;;AAKvC;;AAEA;;AACI;;AAAuF;AAAA;AAAA;;AAAvF;;AACA;;AAA2B;;AAAQ;;AACnC;;AAIA;;AAAmD;;AAC1C;;AACb;;AACA;;AAOA;;AACI;;AAAkF;;AAAO;;AAC7F;;AACA;;AACI;;AAAmD;;AAA4B;;AAAgC;;AAAO;;AAAK;;AAC/H;;AACA;;AAEI;;AAAG;;AAAgB;;AACvB;;AACJ;;AAEJ;;;;AA9C8B;;AAAA;;AAS8F;;AAAA;;AASzB;;AAAA;;AAElF;;AAAA;;AAe8C;;AAAA;;AAG+B;;AAAA;;;;;;;;;sED3BjFhB,c,EAAc;cAL1B,uDAK0B;eALhB;AACThF,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEb3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACY4B;;AAAsE;;AAC1D;;;;;;AACZ;;AAAqE;;AACzD;;;;;;AAJhB;;AACI;;AAEA;;AAEJ;;;;;;AAJW;;AAAA;;AAEA;;AAAA;;;;;;AAiBP;;AAAmE;;AAAc;;;;;;AACjF;;AAAgE;;AAAa;;;;;;AAFjF;;AACI;;AACA;;AACJ;;;;;;AAFW;;AAAA;;AACA;;AAAA;;;;;;AAYP;;AAAsE;;AAC1D;;;;;;AACZ;;AAAuE;;AAC3D;;;;;;AAJhB;;AACI;;AAEA;;AAEJ;;;;;;AAJW;;AAAA;;AAEA;;AAAA;;;;;;AAUP;;AAAwE;;AAC5D;;;;;;AAFhB;;AACI;;AAEJ;;;;;;AAFW;;AAAA;;;;;;AAGX;;AAAoG;;AAA4C;;;;QDhD3J+F,iB;;;AAKX,iCAAoBxF,EAApB,EAA8CyF,WAA9C,EAAiFvF,MAAjF,EAAkG;AAAA;;AAA9E,aAAAF,EAAA,GAAAA,EAAA;AAA0B,aAAAyF,WAAA,GAAAA,WAAA;AAAmC,aAAAvF,MAAA,GAAAA,MAAA;AAC/E,YAAIC,YAAY,GAAG;AACjByE,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC5B,0DAAWvE,QADiB,EAE5B,0DAAWqF,OAAX,CAAmB,6CAAnB,CAF4B,CAApB,CADO;AAMjBC,eAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACzB,0DAAWtF,QADc,EAEzB,0DAAWsF,KAFc,CAApB,CANU;AAUjBd,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC5B,0DAAWxE,QADiB,EAE5B,0DAAWyE,SAAX,CAAqB,CAArB,CAF4B,CAApB,CAVO;AAcjBc,oBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC9B,0DAAWvF,QADmB,CAApB;AAdK,SAAnB;AAoBA,aAAKwF,YAAL,GAAoB7F,EAAE,CAACU,KAAH,CAASP,YAAT,CAApB;AACD;;;;mCASU;AACT,eAAK2F,QAAL,GAAgB;AACdlB,oBAAQ,EAAE,EADI;AAEdC,oBAAQ,EAAE,EAFI;AAGdc,iBAAK,EAAE;AAHO,WAAhB;AAOD;AAED;;;;;;;;;;;;;;;;;;mCAmBQ;AAAA;;AACN,eAAKF,WAAL,CAAiBM,YAAjB,CAA8B,KAAKD,QAAnC,EACCxD,SADD,CAEE,UAAA0D,QAAQ,EAAI;AAEV,kBAAI,CAAC9F,MAAL,CAAY+F,aAAZ,CAA0B,GAA1B;;AACA9D,mBAAO,CAACC,GAAR,CAAY,MAAI,CAAC0D,QAAjB;AAED,WAPH,EAQE,UAAAlD,KAAK;AAAA,mBAAIT,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBQ,KAApB,CAAJ;AAAA,WARP;AAWD;;;4BAhDc;AAAE,iBAAO,KAAKiD,YAAL,CAAkBxC,GAAlB,CAAsB,UAAtB,CAAP;AAA2C;;;4BAEhD;AAAE,iBAAO,KAAKwC,YAAL,CAAkBxC,GAAlB,CAAsB,OAAtB,CAAP;AAAwC;;;4BACvC;AAAE,iBAAO,KAAKwC,YAAL,CAAkBxC,GAAlB,CAAsB,UAAtB,CAAP;AAA2C;;;4BAC3C;AAAE,iBAAO,KAAKwC,YAAL,CAAkBxC,GAAlB,CAAsB,YAAtB,CAAP;AAA6C;;;;;;;uBAjCrDmC,iB,EAAiB,2H,EAAA,0I,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,kFAFhB,CAAC,yEAAD,CAEgB,E;AAFH,e;AAAA,c;AAAA,ynC;AAAA;AAAA;ACT3B;;AACI;;AAAiC;AAAA,mBAAY,IAAAU,QAAA,EAAZ;AAAsB,WAAtB;;AAC7B;;AACI;;AAAuC;;AAAO;;AAClD;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAsB;;AAAQ;;AAC9B;;AAAsE;AAAA;AAAA;;AAAtE;;AACA;;AAMJ;;AACJ;;AAEJ;;AAGA;;AACI;;AACI;;AACI;;AAAmB;;AAAa;;AAChC;;AAAyF;AAAA;AAAA;;AAAzF;;AACA;;AAAmD;;AAC1C;;AACT;;AAIJ;;AACJ;;AAEJ;;AACA;;AACI;;AACI;;AACI;;AAAsB;;AAAQ;;AAC9B;;AAAqG;AAAA;AAAA;;AAArG;;AACA;;AAMJ;;AACJ;;AACA;;AACI;;AACI;;AAAwB;;AAAgB;;AACxC;;AACA;;AAIA;;AACJ;;AACJ;;AACJ;;AAIA;;AACI;;AAA2H;AAAA,mBAAW,IAAAA,QAAA,EAAX;AAAqB,WAArB;;AAAwB;;AAAO;;AAC9J;;AACA;;AAEI;;AAAG;;AAAgB;;AACvB;;AACJ;;AACJ;;AAEJ;;;;AA3EU;;AAAA;;AASoF;;AAAA;;AACjE;;AAAA;;AAgBoF;;AAAA;;AAGpF;;AAAA;;AAYgG;;AAAA;;AAChG;;AAAA;;AAYA;;AAAA;;AAIE;;AAAA;;AAQoC;;AAAA;;;;;;;;;sEDxDtDV,iB,EAAiB;cAN7B,uDAM6B;eANnB;AACTjG,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD,CAHF;AAITG,mBAAS,EAAG,CAAC,yEAAD;AAJH,S;AAMmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;QAOauG,gB;;;AACX,kCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBAJUA,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,4U;AAAA;AAAA;ACP7B;;AAEI;;AAUI;;AAEI;;AACI;;AAAwB;;AAAqC;;AAAI;;AACrE;;AACA;;AACI;;AAA0C;;AAAsC;;AAAkB;;AACtG;;AAEA;;AACI;;AAAiC;;AAAuC;;AAAU;;AACtF;;AACA;;AACI;;AAAgC;;AAAwC;;AACrB;;AAAC;;AAAQ;;AAAO;;AAAuB;;AAC9F;;AAEJ;;AAEJ;;AACJ;;;;AAjBmB;;AAAA;;AAGA;;AAAA;;AAIA;;AAAA;;AAGA;;AAAA;;;;;;;;;sEDlBNA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT5G,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkCgC;;AAAmE;;AAAa;;;;;;AAChF;;AAAoE;;AAAsC;;;;;;AAF9G;;AACI;;AACA;;AACJ;;;;;;AAFW;;AAAA;;AACA;;AAAA;;;;;;;;AA1B3B;;AACI;;AACI;;AACI;;AACI;;AAA+C;;AACnD;;AACJ;;AAEA;;AACI;;AACI;;AAA8C;;AAClD;;AACJ;;AACJ;;AAEA;;AAEA;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AACzB;;AAEI;;AAEI;;AAA0M;AAAA;;AAAA;;AAAA;AAAA;;AACnL;;AACvB;;AAIJ;;AAIA;;AACI;;AAAO;;AAAG;;AAA0B;;AAAI;;AACxC;;AASJ;;AAEA;;AACI;;AACV;;AAAgD;;AAAM;;AAE5C;;AACV;;AAAoD;;AAAU;;AAExD;;AACJ;;AACJ;;AACA;;AACI;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAEzB;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AAAnB;;AAEA;;AACI;;AAEJ;;AAAkB;;AAClB;;AAEA;;AACI;;AACV;;AAAgD;;AAAM;;AAE5C;;AACV;;AAAoD;;AAAU;;AAExD;;AACJ;;AAEJ;;AACJ;;;;;;AA5DU;;AAAA;;AAKgN;;AAAA;;AAErM;;AAAA;;AAyBiB;;AAAA;;AAOxB;;AAAA;;AAOF;;AAAA;;AAO0B;;AAAA;;;;;;AAgBtC;;AAGI;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAAG;;AAAuB;;AAC9B;;;;;;;;AAEA;;AAKI;;AACI;;AAAgC;;AAAa;;AAC7C;;AAA4C;;AAAgB;;AAChE;;AAEA;;AACI;;AAAiC;;AAAgB;;AAEjD;;AAA4C;;AAAqB;;AACrE;;AAEA;;AAAM;AAAA;;AAAA;;AAAA;AAAA;;AACF;;AAAgF;;AAAe;;AACnG;;AACJ;;;;;;AAZoD;;AAAA;;AAMA;;AAAA;;;;QDhHnD2G,kB;;;AAMZ,kCAAoBpG,EAApB,EAA4CqG,aAA5C,EAA8EnG,MAA9E,EAA+F;AAAA;;AAA3E,aAAAF,EAAA,GAAAA,EAAA;AAAwB,aAAAqG,aAAA,GAAAA,aAAA;AAAkC,aAAAnG,MAAA,GAAAA,MAAA;AAAmB,YAAIC,YAAY,GAAG;AAClHC,eAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACzB,0DAAWC,QADc,EAEzB,0DAAWC,SAAX,CAAqB,KAArB,CAFyB,CAApB;AAD2G,SAAnB;AAMjG,YAAIC,aAAa,GAAG;AACnBC,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACxB;AACA;AAFwB,WAApB;AADa,SAApB;AAOA,aAAKC,QAAL,GAAgBT,EAAE,CAACU,KAAH,CAASP,YAAT,CAAhB;AACA,aAAKQ,QAAL,GAAcX,EAAE,CAACU,KAAH,CAASH,aAAT,CAAd;AACA;;;;mCAIQ;AACN,eAAK+F,OAAL,GAAe;AACbzF,gBAAI,EAAE,EADO;AAEb0F,qBAAS,EAAC;AAFG,WAAf;AAIA,eAAK7E,IAAL,GAAU,KAAV;AACA,eAAKC,GAAL,GAAS,KAAT;AACD;;;mCACM;AAAA;;AACN,eAAKD,IAAL,GAAU,IAAV;AACA,eAAK2E,aAAL,CAAmBG,QAAnB,CAA4B,KAAKF,OAAjC,EAA0ChE,SAA1C,CACC,UAAAC,MAAM,EAAI;AACT,kBAAI,CAACb,IAAL,GAAU,KAAV;AACA,kBAAI,CAACC,GAAL,GAAS,IAAT;AACCQ,mBAAO,CAACC,GAAR,CAAYG,MAAZ,EAHQ,CAIR;;AACA,gBAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,MAAM,CAAC,CAAD,CAArB,CAAX,CAAX;AAEA,kBAAI,CAAC+D,OAAL,GAAe;AACbzF,kBAAI,EAAE2B,IAAI,CAAC,MAAD,CADG;AAEb+D,uBAAS,EAAE/D,IAAI,CAAC,WAAD;AAFF,aAAf;AAMD,WAdF,EAeC,UAAAI,KAAK,EAAI;AACPT,mBAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,WAjBF;AAqBD;;;iCAEiBC,Q,EAAkB;AAChC,cAAIrC,IAAI,GAAGqC,QAAQ,CAAC,CAAD,CAAnB;AACA,cAAIC,UAAU,GAAe,IAAIC,UAAJ,EAA7B;AACA,cAAIC,IAAI,GAAG,IAAX;;AACAF,oBAAU,CAACG,SAAX,GAAuB,UAASC,CAAT,EAAY;AACjCF,gBAAI,CAACsD,OAAL,CAAazF,IAAb,GAAoBiC,UAAU,CAACP,MAA/B;AACD,WAFD;;AAGAO,oBAAU,CAACK,UAAX,CAAsB3C,IAAtB;AACD;;;8BAEA;AAED,eAAKN,MAAL,CAAYkD,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;;;4BAhDW;AAAE,iBAAO,KAAK3C,QAAL,CAAc4C,GAAd,CAAkB,OAAlB,CAAP;AAAoC;;;;;;;uBAvBrC+C,kB,EAAkB,2H,EAAA,0I,EAAA,uH;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,a;AAAA,+tE;AAAA;AAAA;ACV/B;;AAEI;;AAEA;;AAEI;;AAAiB;;AAAU;;AAC3B;;AAAG;;AAAsI;;AAAK;;AAAkD;;AAChM;;AACI;;AAsFA;;AAcA;;AAsBJ;;AAEJ;;AAIJ;;;;AAhIiB;;AAAA;;AAsFA;;AAAA;;AAcA;;AAAA;;;;;;;;;sEDnGJA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT7G,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAIagH,gB;;;AACX,gCAAmBC,IAAnB,EAA6CxG,MAA7C,EAA6D;AAAA;;AAA1C,aAAAwG,IAAA,GAAAA,IAAA;AAA0B,aAAAxG,MAAA,GAAAA,MAAA;AAAkB;;;;sCACpD;AACT,cAAI,CAAC,KAAKwG,IAAL,CAAUzC,eAAV,EAAL,EAAkC;AAChC,iBAAK/D,MAAL,CAAYkD,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD;;;;;;;uBARUqD,gB,EAAgB,iH,EAAA,8G;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;;;ACJ7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaE,W;;;AAGX,2BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAFb,aAAAC,SAAA,GAA8B,IAAI,mEAAJ,EAA9B;AAGN;;;;mCACO,CAEN;AACA;AACD;;;kCACSC,I,EAAI;AACZ,iBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAe,uCAAf,EAAwDD,IAAxD,CAAP;AACD;;;qCACY;AACX,cAAIjF,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AACA,cAAIF,KAAJ,EAAW;AACT,mBAAO,IAAP;AACD,WAFD,MAEO;AACL,mBAAO,KAAP;AACD;AACF;;;0CACqB;AACpB,cAAMA,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CADoB,CAEpB;AACA;AACA;;AACA,iBAAO,CAAC,KAAK8E,SAAL,CAAeG,cAAf,CAA8BnF,KAA9B,CAAR;AACD;;;kCAIS;AACR,cAAIA,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,cAAMC,MAAM,GAAG,IAAI,mEAAJ,EAAf;AACA,cAAMC,YAAY,GAAGD,MAAM,CAACE,WAAP,CAAmBL,KAAnB,CAArB;;AAEA,cAAIA,KAAJ,EAAW;AACT,gBAAIoF,IAAI,GAAGhF,YAAY,CAACgF,IAAxB;;AAEA,gBAAIA,IAAI,IAAI,OAAZ,EAAqB;AACnB,qBAAO,IAAP;AACD,aAFD,MAEO;AACL,qBAAO,KAAP;AACD;AACF,WARD,MAQO;AACL,mBAAO,KAAP;AACD;AAEF;;;oCAEW;AACV,cAAIpF,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,cAAMC,MAAM,GAAG,IAAI,mEAAJ,EAAf;AACA,cAAMC,YAAY,GAAGD,MAAM,CAACE,WAAP,CAAmBL,KAAnB,CAArB;;AAEA,cAAIA,KAAJ,EAAW;AACT,gBAAIoF,IAAI,GAAGhF,YAAY,CAACgF,IAAxB;;AAEA,gBAAIA,IAAI,IAAI,SAAZ,EAAuB;AACrB,qBAAO,IAAP;AACD,aAFD,MAEO;AACL,qBAAO,KAAP;AACD;AACF,WARD,MAQO;AACL,mBAAO,KAAP;AACD;AACF;;;iCAEQ;AACPnF,sBAAY,CAACoF,KAAb;AACD;;;;;;;uBAtEUP,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVQ,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACNxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,W;;;AAEX,2BAAoBR,IAApB,EAAmC;AAAA;;AAAf,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;qCAE5BS,Q,EAAQ;AACnB,iBAAO,KAAKT,IAAL,CAAUG,IAAV,CAAoB,2CAApB,EAAgEM,QAAhE,CAAP;AACD;;;iCAGQxG,I,EAAI;AACX,iBAAO,KAAK+F,IAAL,CAAUG,IAAV,CAAoB,uCAApB,EAA4DlG,IAA5D,CAAP;AACD;;;0CACiBA,I,EAAI;AACpB,iBAAO,KAAK+F,IAAL,CAAUG,IAAV,CAAoB,oCAApB,EAAyDlG,IAAzD,CAAP;AACD;;;;;;;uBAdUuG,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAHV;;;;;sEAGDA,W,EAAW;cAJvB,wDAIuB;eAJZ;AACVD,oBAAU,EAAE;AADF,S;AAIY,Q;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMG,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAItF,OAAO,CAACS,KAAR,CAAc6E,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule   } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { SummarizeComponent } from './components/summarize/summarize.component';\r\nimport { DownloadComponent } from './components/download/download.component';\r\nimport { ContextExtractComponent } from './components/context-extract/context-extract.component';\r\nimport { AdminComponent } from './components/admin/admin.component';\r\n\r\n\r\nimport { AuthGuardService as AuthGuard } from './services/auth-guard.service';\r\nimport { RoleGuardService as RoleGuard } from './services/role-guard-service.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:HomeComponent\r\n  },\r\n  {\r\n    path :'admin',\r\n    component : AdminComponent ,\r\n    canActivate : [AuthGuard]\r\n    \r\n  },\r\n  {\r\n    path : 'login',\r\n    component: LoginComponent,\r\n   // canActivate : [AuthGuard]\r\n  },  \r\n  {\r\n    path : 'register',\r\n    component:RegisterComponent,\r\n  },\r\n  {\r\n    path : 'summarize',\r\n    component:SummarizeComponent,\r\n    canActivate : [AuthGuard]\r\n  },\r\n  {\r\n    path : 'download',\r\n    component:DownloadComponent,\r\n    canActivate : [AuthGuard]\r\n  },\r\n  {\r\n    path :'contextextraction',\r\n    component : ContextExtractComponent,\r\n    canActivate : [AuthGuard]\r\n  },\r\n  {\r\n    path : '**',\r\n    component : LoginComponent\r\n  },\r\n  {\r\n    path : 'logout', redirectTo : 'login' \r\n  },\r\n  \r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  isAuth : boolean;\r\n  constructor(){\r\n    this.isAuth=false;\r\n  }\r\n  title = 'hello-world';\r\n}\r\n","<div class=\"zooming\">\r\n\r\n<app-header> </app-header>\r\n\r\n<router-outlet ></router-outlet>\r\n\r\n<app-footer> </app-footer>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClientJsonpModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { SummarizeComponent } from './components/summarize/summarize.component';\r\nimport { DownloadComponent } from './components/download/download.component';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { ContextExtractComponent } from './components/context-extract/context-extract.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { AdminComponent } from './components/admin/admin.component';\r\n\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    RegisterComponent,\r\n    SummarizeComponent,\r\n    DownloadComponent,\r\n    SidebarComponent,\r\n    ContextExtractComponent,\r\n    FooterComponent,\r\n    AdminComponent,\r\n   \r\n    \r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientJsonpModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [AuthGuardService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-sidebar>\r\n</app-sidebar>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Component({\r\n  selector: 'app-context-extract',\r\n  templateUrl: './context-extract.component.html',\r\n  styleUrls: ['./context-extract.component.css']\r\n})\r\nexport class ContextExtractComponent implements OnInit {\r\n  context;\r\n  txt :String;\r\n  load:boolean;\r\n  res:boolean;\r\n  TextForm: FormGroup;\r\n  fileForm:FormGroup;\r\n  constructor(private fb: FormBuilder,private extractdata:UserService,private router : Router) { \r\n    let formControls = {\r\n    texte: new FormControl('', [\r\n      Validators.required,\r\n      Validators.maxLength(15000),\r\n    ])\r\n  }\r\n  let formControls2 = {\r\n   file: new FormControl('', [\r\n     //Validators.required,\r\n     //Validators.maxLength(15000),\r\n   ])\r\n   }\r\n \r\n   this.TextForm = fb.group(formControls);\r\n   this.fileForm=fb.group(formControls2);\r\n  }\r\n\r\n  get texte() { return this.TextForm.get('texte'); }\r\n\r\n  ngOnInit(): void {\r\n    this.context= {\r\n      text: '',\r\n      user_id:'',\r\n      contexte:'',\r\n      keyword0:'',\r\n      keyword1:'',\r\n      keyword2:'',\r\n      keyword3:'',\r\n      keyword4:'',\r\n      keyword5:'',\r\n      keyword6:'',\r\n      keyword7:'',\r\n      keyword8:'',\r\n      keyword9:'',\r\n    };\r\n    this.load=false;\r\n    this.res=false;\r\n  }\r\n  Contextextraction(){\r\n    this.load=true;\r\n    \r\n    this.txt=this.context['text']\r\n    let token = localStorage.getItem('token');\r\n    const helper = new JwtHelperService();\r\n\r\n    const decodedToken = helper.decodeToken(token);\r\n    this.context['id_user']=decodedToken.user_id \r\n    console.log(this.context['id_user'])\r\n    this.extractdata.Contextextraction(this.context).subscribe(\r\n     result => {\r\n      this.load=false;\r\n      this.res=true;\r\n      \r\n       var json = JSON.parse(JSON.stringify(result));//[0]\r\n       //console.log(json['context'][0]['etiquette'])\r\n       //console.log(json['keywords'][0]['mots'])\r\n       this.context = {\r\n        text: this.txt,\r\n        contexte: json['context'][0]['etiquette'],\r\n        keyword0: json['keywords'][0]['mots'],\r\n        keyword1: json['keywords'][1]['mots'],\r\n        keyword2: json['keywords'][2]['mots'],\r\n        keyword3: json['keywords'][3]['mots'],\r\n        keyword4: json['keywords'][4]['mots'],\r\n        keyword5: json['keywords'][5]['mots'],\r\n        keyword6: json['keywords'][6]['mots'],\r\n        keyword7: json['keywords'][7]['mots'],\r\n        keyword8: json['keywords'][8]['mots'],\r\n        keyword9: json['keywords'][9]['mots'],\r\n        \r\n       };\r\n\r\n       \r\n     },\r\n     error => {\r\n       console.log(error);\r\n     }\r\n   );\r\n   \r\n  }\r\n  public onChange(fileList: FileList): void {\r\n    let file = fileList[0];\r\n    let fileReader: FileReader = new FileReader();\r\n    let self = this;\r\n    fileReader.onloadend = function(x) {\r\n      self.context.text = fileReader.result as string;\r\n    }\r\n    fileReader.readAsText(file);\r\n  }\r\n\r\nNew(){\r\n \r\n  this.router.navigate(['contextextraction']); \r\n}\r\n\r\n}\r\n","<div class=\"wrapper d-flex align-items-stretch\">\r\n\r\n    <app-sidebar></app-sidebar>\r\n\r\n    <!-- Page Content  -->\r\n    <div id=\"content\" class=\"p-md-5 pt-5\" style=\"float:left;\">\r\n\r\n        <h2 class=\"mb-4\">Context Extraction</h2>\r\n        <p>Put your text here or drop your file. EASYContext returns the context and the most valuable keyword in your text.\r\n        </p>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <ul class=\"nav nav-pills nav-fill mb-3\">\r\n                    <li class=\"nav-item\">\r\n                        <a id=\"b1\" onclick=\"myFunction()\" class=\"nav-link\" style=\"cursor:pointer;background-color:cadetblue;color:\r\n                          cornsilk;\">\r\n                            <i aria-hidden=\"false\" class=\"fa fa-font\"></i> Text\r\n                        </a>\r\n                    </li>\r\n\r\n                    <li class=\"nav-item\">\r\n                        <a id=\"b2\" onclick=\"myFunctionf()\" class=\"nav-link\" style=\"cursor:pointer;\">\r\n                            <i aria-hidden=\"true\" class=\"fa\r\n                              fa-file\"></i> File\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n\r\n\r\n\r\n                <form [formGroup]=\"TextForm\" (ngSubmit)=\"Contextextraction()\">\r\n                    <div class=\"mt-3\" id=\"myDIV\" style=\"display:block;\">\r\n                        <!--<textarea class=\"form-control2\" rows=\"20\" placeholder=\"Put your text here...\" style=\"height: 150px;\"></textarea>-->\r\n                        <div class=\"form-group\">\r\n                            <!--<label for=\"texte\">Put your text here...:</label>-->\r\n                            <textarea type=\"text\" class=\"form-control2\" rows=\"20\" placeholder=\"Put your text here...\" style=\"height: 250px;font-style: italic;font-family: Arial;color:black;\" id=\"text\" name=\"text\" [(ngModel)]=\"context.text\" formControlName=\"texte\" required autofocus></textarea>\r\n                            <div *ngIf=\"texte.touched && texte.invalid\">\r\n                                <small *ngIf=\"texte.errors.required\" class=\"form-text text-danger\">Text Required</small>\r\n                                <small *ngIf=\"texte.errors.maxlength\" class=\"form-text text-danger\">this Text is too long to extract his context</small>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"d-flex flex-row justify-content-end\">\r\n\r\n                            <button type=\"reset\" class=\"btn btn-secondary\" style=\"margin: 2px;\">\r\n                                <i aria-hidden=\"true\" class=\"fa fa-eraser\"></i> Clear </button>\r\n                            <button type=\"submit\" [disabled]=\"TextForm.invalid\" class=\"btn btn-success\" style=\"margin: 2px;\">\r\n                  <i aria-hidden=\"true\" class=\"fa fa-line-chart\"></i>Extract Context </button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <div class=\"mt-3\" id=\"myDIV2\" style=\"display:none;\">\r\n                    <form [formGroup]=\"fileForm\" (ngSubmit)=\"Contextextraction()\">\r\n\r\n                        <input type=\"file\" (change)=\"onChange($event.target.files)\" style=\"margin-bottom: 20px;margin-left:40%;\">\r\n\r\n                        <div class=\"form-group\">\r\n                            <textarea type=\"text\" class=\"form-control2\" rows=\"20\" placeholder=\"The content of your file will be writen here...\" style=\"height: 250px;font-style: italic;font-family: Arial;color:black;\" id=\"text\" name=\"text\">\r\n                        \r\n                        {{context.text}}  </textarea>\r\n                        </div>\r\n\r\n                        <div class=\"d-flex flex-row justify-content-end\">\r\n                            <button type=\"reset\" class=\"btn btn-secondary\" style=\"margin: 2px;\">\r\n                  <i aria-hidden=\"true\" class=\"fa fa-eraser\"></i> Clear </button>\r\n\r\n                            <button type=\"submit\" [disabled]=\"fileForm.invalid\" class=\"btn btn-success\" style=\"margin: 2px;\">\r\n                  <i aria-hidden=\"true\" class=\"fa fa-line-chart\"></i> Extract Context </button>\r\n\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"load\" class=\"lds-roller\" style=\"display: block;margin-left: auto;margin-right: auto;\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <p>Waiting for results ...</p>\r\n        </div>\r\n\r\n        <div *ngIf=\"!load&&res\" class=\"row\" style=\"margin-top: 20px;\">\r\n\r\n            <div class=\"col-sm-8\">\r\n                <h3 style=\"text-decoration: underline;color: forestgreen;font-family: Comic Sans MS;\">\r\n                    The Context is: <br>\r\n\r\n                </h3>\r\n                <div id=\"block\">\r\n                    <!--<input type=\"text\" id=\"inputnoneditable\" readonly>-->\r\n                    <!--<textarea style=\"height: 100px;width: 100%;\"></textarea>-->\r\n                    <div class=\"badge badge-default text-wrap\" style=\"width: 40rem;font-size: 15pt;\">{{context.contexte}} </div>\r\n\r\n\r\n                    <!--<div id=\"outputcontext1\">\r\n\r\n                        <h4>\r\n                            INSERT WORDCLOUD HERE!\r\n                        </h4>\r\n                    </div>-->\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n            <div class=\"col-sm-4\">\r\n                <h3 style=\"text-decoration: underline;font-family: Comic Sans MS;color:navy \">Keywords : </h3>\r\n                <div class=\"keywords\">\r\n                    <span class=\"badge badge-pill badge-default\" style=\"background-color:red ;font-size: 14pt;\">{{context.keyword0}}</span>\r\n                    <span class=\"badge badge-pill badge-primary\" style=\"font-size: 13.8pt;\">{{context.keyword1}}</span>\r\n                    <span class=\"badge badge-pill badge-secondary\" style=\"font-size: 13.6pt;\">{{context.keyword2}}</span>\r\n                    <span class=\"badge badge-pill badge-success\" style=\"font-size: 13.4pt;\">{{context.keyword3}}</span>\r\n                    <span class=\"badge badge-pill badge-danger\" style=\"font-size: 13.2pt;\">{{context.keyword4}}</span>\r\n                    <span class=\"badge badge-pill badge-warning\" style=\"font-size: 13.0pt;\">{{context.keyword5}}</span>\r\n                    <span class=\"badge badge-pill badge-info\" style=\"font-size: 12.8pt;\">{{context.keyword6}}</span>\r\n                    <span class=\"badge badge-pill badge-light\" style=\"font-size: 12.6pt;background-color: darkgrey;\">{{context.keyword7}}</span>\r\n                    <span class=\"badge badge-pill badge-dark\" style=\"font-size: 12.4pt;\">{{context.keyword8}}</span>\r\n                    <span class=\"badge badge-pill badge-dark\" style=\"background-color:chartreuse ;font-size: 12.2pt;\">{{context.keyword9}}</span>\r\n                    <!--<div id='mot' class=\"badge badge-primary text-wrap\" style=\"width: 10rem;font-size: 12pt;\">{{context.keyword0}}</div>\r\n                    <div id='mot1'>{{context.keyword1}}</div>\r\n                    <div id='mot2'>{{context.keyword2}}</div>\r\n                    <div id='mot3'>{{context.keyword3}}</div>\r\n                    <div id='mot4'>{{context.keyword4}}</div>\r\n                    <div id='mot5'>{{context.keyword5}}</div>\r\n                    <div id='mot6'>{{context.keyword6}}</div>\r\n                    <div id='mot7'>{{context.keyword7}}</div>\r\n                    <div id='mot8'>{{context.keyword8}}</div>\r\n                    <div id='mot9'>{{context.keyword9}}</div>-->\r\n                </div>\r\n\r\n                <form (ngSubmit)=\"New()\">\r\n                    <button class=\"btn btn-success\" style=\"margin: 20px;float:left;\" type=\"submit\"> New Context Extraction !</button>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-download',\r\n  templateUrl: './download.component.html',\r\n  styleUrls: ['./download.component.css']\r\n})\r\nexport class DownloadComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2> Recent results </h2> ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"footer\">\r\n    <div class=\"container center\" style=\"align-items: center;\">\r\n        <i class=\"fa fa-copyright d-flex justify-content-center\" aria-hidden=\"true\">\r\n          EASYCONTEXT 2019\r\n      </i>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router , NavigationEnd } from '@angular/router';\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  isAuth: boolean;\r\n  mySubscription: any;\r\n\r\n  constructor(public authSerivce : AuthService, private router : Router) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\r\n      return false;\r\n    };\r\n    this.mySubscription = this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        // Trick the Router into believing it's last link wasn't previously loaded\r\n        this.router.navigated = false;\r\n      }\r\n    });\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.authSerivce.isAuthenticated());\r\n    //console.log(this.authSerivce.isLoggedIn());\r\n\r\n    this.isAuth = this.authSerivce.isAuthenticated();\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    if (this.mySubscription) {\r\n      this.mySubscription.unsubscribe();\r\n    }\r\n  }\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    this.router.navigate(['logout']); \r\n\r\n}\r\n}\r\n","<nav class=\"navbar navbar-toggleable-md navbar-expand-lg scrolling-navbar double-nav\" id=\"navbar2\">\r\n\r\n\r\n    <div [routerLink]=\"['/']\" class=\"breadcrumb-dn mr-auto ml-2\">\r\n        <img src=\"../assets/images/logo6.png\">- The newly solution for context extraction ! We are mining at a deeper level for you !\r\n    </div>\r\n    <ul class=\"nav navbar-nav nav-flex-icons ml-auto\" style=\"float :right;\">\r\n        <!--<li class=\"nav-item\" style=\"width:110px;\">\r\n            <a class=\"nav-link\" style=\"color:ghostwhite;\" [routerLink]=\"['/']\"><i class=\"fa fa-home mr-3\"></i> <span class=\"clearfix d-none d-sm-inline-block\"> </span> Home</a>\r\n        </li>-->\r\n        <li class=\"nav-item\" style=\"width:110px;\">\r\n            <a class=\"nav-link\" style=\"color:ghostwhite;\" [routerLink]=\"['/login']\" *ngIf=\"!isAuth\"><i class=\"fa fa-sign-in\"></i> <span class=\"clearfix d-none d-sm-inline-block\"> </span>  Login</a>\r\n        </li>\r\n\r\n        <li class=\"nav-item\" style=\"width:110px;\">\r\n            <a class=\"nav-link\" style=\"color: ghostwhite;\" [routerLink]=\"['/register']\" *ngIf=\"!isAuth\"><i class=\"fas fa-user-plus\"></i>  Register</a>\r\n        </li>\r\n\r\n        <li class=\"nav-item dropdown\" style=\"width:110px;\">\r\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" style=\"color: ghostwhite;\" id=\"navbarDropdownMenuLink\" *ngIf=\"isAuth\" data-toggle=\"dropdown\" aria-haspopup=\"true\">\r\n                <i class=\"fas fa-user\"></i> Account\r\n            </a>\r\n            <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                <a class=\"dropdown-item\" [routerLink]=\"['/profile']\"> My Profile</a>\r\n                <a class=\"dropdown-item \" [routerLink]=\"[ '/download'] \"> My Recents Results</a>\r\n                <a style=\"color: ghostwhite; \" class=\"dropdown-item \" (click)=\"logout() \"> <span class=\"fa fa-sign-out mr-3 \"></span> Logout</a>\r\n\r\n            </div>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n<!--<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js \"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0/js/bootstrap.bundle.min.js \"></script>\r\n<script src=\"script.min.js \"></script>-->","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  name = \"EasyContext\";\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<body>\r\n    <div class=\"highlight-blue\">\r\n        <header></header>\r\n        <div class=\"container\" id=\"container1\">\r\n            <div class=\"intro\">\r\n                <h2 class=\"text-center\">Welcome to EASYContext </h2>\r\n                <p class=\"text-center\"> </p>\r\n            </div>\r\n            < </div>\r\n        </div>\r\n        <div class=\"features-boxed\">\r\n            <div class=\"container\">\r\n                <div class=\"intro\">\r\n                    <h2 class=\"text-center\" style=\"color:#33A5FF;\">Our Features\r\n                    </h2>\r\n\r\n                </div>\r\n                <div class=\"row justify-content-center features\">\r\n                    <div class=\"col-sm-6 col-md-5 col-lg-4 item\">\r\n                        <div class=\"box\" [routerLink]=\"['/contextextraction']\"><i class=\"fa fa-language icon\"></i>\r\n                            <h3 class=\"name\" style=\"color:whitesmoke;\">Context Extraction\r\n                            </h3>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6 col-md-5 col-lg-4 item\">\r\n                        <div class=\"box\" [routerLink]=\"['/summarize']\"><i class=\"fa fa-file-text icon\" aria-hidden=\"true\"></i>\r\n                            <h3 class=\"name\" style=\"color:whitesmoke;\">Summarize text </h3>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n\r\n        </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { JwtHelperService, JwtModule } from '@auth0/angular-jwt';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/models/user';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  isAuth : Boolean;\r\n  loginForm: FormGroup;\r\n  loginn;\r\n  constructor(private fb: FormBuilder,  private _as: AuthService, private router: Router) {\r\n    let token = localStorage.getItem('token');\r\n    if (token) {\r\n      if (_as.isAdmin()) {\r\n        router.navigate(['/admin'])\r\n      } else if (_as.isStudent()) {\r\n        const helper = new JwtHelperService();\r\n        const studentId = helper.decodeToken(token).studentId;\r\n        router.navigate(['/contextextraction', studentId])\r\n      }\r\n    }\r\n    let formControls = {\r\n      username: new FormControl('',[\r\n        Validators.required,\r\n        //Validators.email\r\n      ]),\r\n      password: new FormControl('',[\r\n        Validators.required,\r\n        Validators.minLength(4)\r\n      ])\r\n    }\r\n\r\n    this.loginForm = fb.group(formControls);\r\n  }\r\n\r\n  //get email(){return this.loginForm.get('email');}\r\n  get username(){return this.loginForm.get('username');}\r\n  get password(){return this.loginForm.get('password');}\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.loginn = {\r\n      username: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n  login() {\r\n    //let data = this.loginForm.value;\r\n    //let user = new User(data.username, null, data.password);\r\n\r\n    this._as.loginUser(this.loginn).subscribe(\r\n     \r\n      result => {\r\n        alert('User '+ this.loginn.username + ' has been logged successfully!');\r\n        //console.log(result);\r\n        //console.log(data);\r\n        let token = result['token'];\r\n        //this.router.navigateByUrl('/');\r\n        localStorage.setItem('token', token);\r\n        this._as.isAuthenticated();  \r\n        const helper = new JwtHelperService();\r\n\r\n        const decodedToken = helper.decodeToken(token);\r\n        if (decodedToken.user_id == 1){\r\n          window.location.href = 'http://localhost:8000/admin/';\r\n        }\r\n        else{\r\n          window.location.href = 'http://localhost:4200/';\r\n        }\r\n      },\r\n      error => {\r\n        alert('Wrong credentials , Please retry!');\r\n        this.router.navigate(['/login']);\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","<body>\r\n\r\n    <form class=\"form-signin\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" style=\"align-content:center;\">\r\n\r\n        <div class=\"text-center mb-4\" style=\"margin:auto;\">\r\n            <h1 class=\"h3 mb-3 font-weight-normal\">Signing in</h1>\r\n            <p> Sign in grants you access to your documents history and downloading your mined results </p>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-label-group\">\r\n            <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"usernameHelp\" name=\"username\" [(ngModel)]=\"loginn.username\" formControlName=\"username\" required autofocus>\r\n            <label for=\"inputUsername\">Username</label>\r\n            <!--<div *ngIf=\"email.touched && email.invalid\">\r\n                    <small *ngIf=\"email.errors.required\" class=\"form-text text-danger\">Email Required</small>\r\n                    <small *ngIf=\"email.errors.email\" class=\"form-text text-danger\">Invalid Email</small>\r\n                </div>-->\r\n        </div>\r\n\r\n        <div class=\"form-label-group\">\r\n            <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" name=\"password\" [(ngModel)]=\"loginn.password\" formControlName=\"password\" required>\r\n            <label for=\"inputPassword\">Password</label>\r\n            <div *ngIf=\"password.touched && password.invalid\">\r\n                <small *ngIf=\"password.errors.required\" class=\"form-text text-danger\">Password Required</small>\r\n                <small *ngIf=\"password.errors.minlength\" class=\"form-text text-danger\">Invalid Password</small>\r\n            </div>\r\n            <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your password with anyone\r\n                else.</small>\r\n        </div>\r\n        <br>\r\n        <!--div class=\"checkbox mb-3\">\r\n            <label>\r\n        <input type=\"checkbox\" value=\"remember-me\"> Remember me\r\n        </label>\r\n        </div>-->\r\n\r\n        <div id=\"botton\">\r\n            <button class=\"btn btn-lg btn-block\" type=\"submit\" [disabled]=\"loginForm.invalid\">Sign in</button>\r\n        </div>\r\n        <div style=\"text-align: center;\">\r\n            <small id=\"emailHelp\" class=\"form-text text-muted\">You don't have an account ! <a [routerLink]=\"['/register']\">Sign up</a> </small>\r\n        </div>\r\n        <div class=\"btnp\" style=\"color: black;\">\r\n\r\n            <p>&copy; 2019-2020</p>\r\n        </div>\r\n    </form>\r\n\r\n</body>","import { Component, OnInit , } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n  providers : [UserService]\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n  register;\r\n\r\n  constructor(private fb: FormBuilder , private userService : UserService, private router : Router) {\r\n    let formControls = {\r\n      username: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern('[a-zA-Z][a-zA-Z][^0-9#&<>\\\"~;$^%{}?]{1,20}$')\r\n      ]),\r\n\r\n      email: new FormControl('', [\r\n        Validators.required,\r\n        Validators.email\r\n      ]),\r\n      password: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(8)\r\n      ]),\r\n      repassword: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n\r\n    }\r\n\r\n    this.registerForm = fb.group(formControls);\r\n  }\r\n\r\n  get username() { return this.registerForm.get('username'); }\r\n\r\n  get email() { return this.registerForm.get('email'); }\r\n  get password() { return this.registerForm.get('password'); }\r\n  get repassword() { return this.registerForm.get('repassword'); }\r\n\r\n\r\n  ngOnInit() {\r\n    this.register = {\r\n      username: '',\r\n      password: '',\r\n      email: ''\r\n\r\n\r\n    };\r\n  }\r\n\r\n  /*Register() {\r\n    let userData= {'username': this.registerForm.value.username,\r\n    'password' : this.registerForm.value.password,\r\n\r\n  }\r\n  console.log(userData);\r\n    //console.log(this.registerForm.value);\r\n    let ud1 = JSON.stringify(userData);\r\n    console.log(ud1);\r\n\r\n    this.userService.registerUser(ud1).subscribe(\r\n      response =>{\r\n        alert('User'+ this.registerForm.value('firstname') + 'has been created successfully!')\r\n      },\r\n      error => console.log('error',error)\r\n    );\r\n\r\n  }*/\r\n  \r\n  Register(){\r\n    this.userService.registerUser(this.register)\r\n    .subscribe(\r\n      response => {\r\n\r\n        this.router.navigateByUrl('/');\r\n        console.log(this.register)\r\n\r\n      },\r\n      error => console.log('error',error)\r\n    \r\n    );\r\n  }\r\n}","<body>\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"Register()\" class=\"form-signup\">\r\n        <div class=\"text-center mb-4\" style=\"margin:auto;\">\r\n            <h1 class=\"h3 mb-3 font-weight-normal\">Sign up</h1>\r\n        </div>\r\n        <div id=\"edit1\">\r\n            <div class=\"form-row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"username\">Username</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"Username\" name=\"username\" [(ngModel)]=\"register.username\" formControlName=\"username\">\r\n                        <div *ngIf=\"username.touched && username.invalid\">\r\n                            <small *ngIf=\"username.errors.required\" class=\"form-text text-danger\">Username\r\n                                Required</small>\r\n                            <small *ngIf=\"username.errors.pattern\" class=\"form-text text-danger\">Invalid\r\n                                Username</small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div class=\"form-row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"email\">Email address</label>\r\n                        <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" formControlName=\"email\" [(ngModel)]=\"register.email\">\r\n                        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone\r\n                            else.</small>\r\n                        <div *ngIf=\"email.touched && email.invalid\">\r\n                            <small *ngIf=\"email.errors.required\" class=\"form-text text-danger\">Email Required</small>\r\n                            <small *ngIf=\"email.errors.email\" class=\"form-text text-danger\">Invalid Email</small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"password\">Password</label>\r\n                        <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" formControlName=\"password\" [(ngModel)]=\"register.password\">\r\n                        <div *ngIf=\"password.touched && password.invalid\">\r\n                            <small *ngIf=\"password.errors.required\" class=\"form-text text-danger\">Password\r\n                                Required</small>\r\n                            <small *ngIf=\"password.errors.minlength\" class=\"form-text text-danger\">Invalid\r\n                                Password</small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"repassword\">Confirm Password</label>\r\n                        <input type=\"password\" class=\"form-control\" id=\"repassword\" name=\"repassword\" formControlName=\"repassword\">\r\n                        <div *ngIf=\"repassword.touched && repassword.invalid\">\r\n                            <small *ngIf=\"repassword.errors.required\" class=\"form-text text-danger\">Confirm Password\r\n                                Required</small>\r\n                        </div>\r\n                        <small *ngIf=\"repassword.valid && repassword.value != password.value\" class=\"form-text text-danger\">Password and confirm password does not match</small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div id=\"button\">\r\n                <button type=\"submit\" class=\"btn btn-lg btn-block\" [disabled]=\"registerForm.invalid || repassword.value != password.value\" (onClick)=\"Register()\"> Submit </button>\r\n            </div>\r\n            <div class=\"btnp\" style=\"color: black;text-align: center;\">\r\n\r\n                <p>&copy; 2019-2020</p>\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n</body>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper d-flex align-items-stretch h-100\">\r\n\r\n    <nav id=\"sidebar\">\r\n    <!--\r\n        <div class=\"img bg-wrap text-center py-4\">\r\n\r\n            <div class=\"user-logo\">\r\n                <img class=\"img\" src=\"assets/images/LOGO2.png\">\r\n\r\n                <h3 style=\"color:#5533FF\" >Mining, at a deeper level !</h3>\r\n            </div>\r\n        </div> -->\r\n        <ul class=\"list-unstyled components mb-5\">\r\n\r\n            <li class=\"active\">\r\n                <a [routerLink]=\"['/']\"><span class=\"fa fa-home mr-3\"></span>Home</a>\r\n            </li>\r\n            <li class=\"active\">\r\n                <a [routerLink]=\"['/contextextraction']\"> <span class=\"fas fa-file-alt\"></span> Context Extraction</a>\r\n            </li>\r\n\r\n            <li class=\"active\">\r\n                <a [routerLink]=\"['/summarize']\"><span class=\"fas fa-file-alt\"></span>  Summarizer</a>\r\n            </li>\r\n            <li class=\"active\">\r\n                <a [routerLink]=\"['/download']\"><span class=\"fa fa-download mr-3 notif\"><small\r\n          class=\"d-flex align-items-center justify-content-center\">5</small></span>Download recent results</a>\r\n            </li>\r\n\r\n        </ul>\r\n\r\n    </nav>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-summarize',\r\n  templateUrl: './summarize.component.html',\r\n  styleUrls: ['./summarize.component.css']\r\n})\r\nexport class SummarizeComponent implements OnInit {\r\n summary;\r\n load:boolean;\r\n res:boolean;\r\n TextForm: FormGroup;\r\n fileForm:FormGroup;\r\n constructor(private fb: FormBuilder,private summarizedata:UserService,private router : Router) { let formControls = {\r\n   texte: new FormControl('', [\r\n     Validators.required,\r\n     Validators.maxLength(15000),\r\n   ])\r\n }\r\n let formControls2 = {\r\n  file: new FormControl('', [\r\n    //Validators.required,\r\n    //Validators.maxLength(15000),\r\n  ])\r\n  }\r\n\r\n this.TextForm = fb.group(formControls);\r\n this.fileForm=fb.group(formControls2);\r\n}\r\n\r\nget texte() { return this.TextForm.get('texte'); }\r\n\r\n ngOnInit(): void {\r\n   this.summary = {\r\n     text: '',\r\n     summarize:'',\r\n   };\r\n   this.load=false;\r\n   this.res=false;\r\n }\r\nposttext(){\r\n  this.load=true;\r\n  this.summarizedata.posttext(this.summary).subscribe(\r\n   result => {\r\n    this.load=false;\r\n    this.res=true;\r\n     console.log(result);\r\n     //alert(\"summarized successfully !!\");     \r\n     var json = JSON.parse(JSON.stringify(result[0]));\r\n     \r\n     this.summary = {\r\n       text: json[\"text\"],\r\n       summarize: json[\"summarize\"],\r\n      \r\n     };\r\n     \r\n   },\r\n   error => {\r\n     console.log(error);\r\n   }\r\n );\r\n \r\n \r\n}\r\n\r\n  public onChange(fileList: FileList): void {\r\n    let file = fileList[0];\r\n    let fileReader: FileReader = new FileReader();\r\n    let self = this;\r\n    fileReader.onloadend = function(x) {\r\n      self.summary.text = fileReader.result as string;\r\n    }\r\n    fileReader.readAsText(file);\r\n  }\r\n\r\nNew(){\r\n \r\n  this.router.navigate(['summarize']); \r\n}\r\n}","<div class=\"wrapper d-flex align-items-stretch\">\r\n\r\n    <app-sidebar></app-sidebar>\r\n    <!-- Page Content  -->\r\n    <div id=\"content\" class=\"p-4 p-md-5 pt-5\">\r\n\r\n        <h2 class=\"mb-4\">Summarizer</h2>\r\n        <p>Enter your text or drop your file text and EasyContext will return a summary of its content. You will get a 40 % summary of your text.<br> We use the TextRank algorithm provided by gensim .</p>\r\n        <div>\r\n            <div *ngIf=\"!res\">\r\n                <ul class=\"nav nav-pills nav-fill mb-3\">\r\n                    <li _ngcontent-c8=\"\" class=\"nav-item\">\r\n                        <a id=\"b1\" onclick=\"myFunction()\" _ngcontent-c8=\"\" class=\"nav-link\" style=\"cursor:pointer;background-color:cadetblue;color: cornsilk;\">\r\n                            <i aria-hidden=\"false\" class=\"fa fa-font\"></i> Text\r\n                        </a>\r\n                    </li>\r\n\r\n                    <li class=\"nav-item\">\r\n                        <a id=\"b2\" onclick=\"myFunctionf()\" _ngcontent-c8=\"\" class=\"nav-link\" style=\"cursor:pointer;\">\r\n                            <i aria-hidden=\"true\" class=\"fa fa-file\"></i> File\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div _ngcontent-c8=\"\" class=\"progress\" style=\"height: 5px;\"> </div>\r\n\r\n                <form [formGroup]=\"TextForm\" (ngSubmit)=\"posttext()\">\r\n                    <div _ngcontent-c8=\"\" class=\"mt-3\" id=\"myDIV\" style=\"display:block;\">\r\n                        <!--<textarea _ngcontent-c8=\"\" class=\"form-control2\" rows=\"20\" placeholder=\"Put your text here...\" style=\"height: 150px;\"></textarea>-->\r\n                        <div class=\"form-group\">\r\n                            <!--<label for=\"texte\">Put your text here...:</label>-->\r\n                            <textarea _ngcontent-c8=\"\" type=\"text\" class=\"form-control2\" rows=\"20\" placeholder=\"Put your text here...\" style=\"height: 250px;font-style: italic;font-family: Arial;color:black;\" id=\"text\" name=\"text\" [(ngModel)]=\"summary.text\" formControlName=\"texte\"\r\n                                required autofocus></textarea>\r\n                            <div *ngIf=\"texte.touched && texte.invalid\">\r\n                                <small *ngIf=\"texte.errors.required\" class=\"form-text text-danger\">Text Required</small>\r\n                                <small *ngIf=\"texte.errors.maxlength\" class=\"form-text text-danger\">this Text is too long to be summarized</small>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div _ngcontent-c8=\"\" class=\"mt-3\" style=\"float: rigth;\">\r\n                            <label><b>Size of the summary is 40%</b></label>\r\n                            <br>\r\n                            <!--<select _ngcontent-c8=\"\" class=\"custom-select w-30 ng-pristine ng-valid\r\n                      ng-touched\">\r\n                    <option _ngcontent-c8=\"\" value=\"5\">Summary 5% of the text</option>\r\n                    <option _ngcontent-c8=\"\" value=\"10\">Summary 10% of the text</option>\r\n                    <option _ngcontent-c8=\"\" value=\"20\">Summary 20% of the text</option>\r\n                    <option _ngcontent-c8=\"\" value=\"30\">Summary 30% of the text</option>\r\n                    <option _ngcontent-c8=\"\" value=\"50\">Summary 50% of the text</option>\r\n                    </select>-->\r\n                        </div>\r\n\r\n                        <div class=\"d-flex flex-row justify-content-end\">\r\n                            <button type=\"reset\" class=\"btn btn-secondary\" style=\"margin: 2px;\">\r\n                  <i aria-hidden=\"true\" class=\"fa fa-eraser\"></i> Clear </button>\r\n\r\n                            <button type=\"submit\" [disabled]=\"TextForm.invalid\" class=\"btn btn-success\" style=\"margin: 2px;\">\r\n                  <i aria-hidden=\"true\" class=\"fa fa-line-chart\"></i> Summarize </button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div class=\"mt-3\" id=\"myDIV2\" style=\"display:none;\">\r\n                    <form [formGroup]=\"fileForm\" (ngSubmit)=\"posttext()\">\r\n\r\n                        <input type=\"file\" (change)=\"onChange($event.target.files)\" style=\"margin-bottom: 20px;margin-left:40%;\">\r\n\r\n                        <div class=\"dz-default dz-message\">\r\n                            <textarea class=\"dropzone dz-multiple dz-clickable\" style=\"height: 220px;width: 100%;\">\r\n                        \r\n                        {{summary.text}}  </textarea>\r\n                        </div>\r\n\r\n                        <div class=\"d-flex flex-row justify-content-end\">\r\n                            <button type=\"reset\" class=\"btn btn-secondary\" style=\"margin: 2px;\">\r\n                  <i aria-hidden=\"true\" class=\"fa fa-eraser\"></i> Clear </button>\r\n\r\n                            <button type=\"submit\" [disabled]=\"fileForm.invalid\" class=\"btn btn-success\" style=\"margin: 2px;\">\r\n                  <i aria-hidden=\"true\" class=\"fa fa-line-chart\"></i> Summarize </button>\r\n\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <!--<div class=\"spinner-border text-success\" style=\"width: 5rem; height: 5rem;display: block;\r\n            margin-left: auto;\r\n            margin-right: auto; overflow: auto;\" role=\"status\">\r\n                <span class=\"sr-only\">Loading...</span>\r\n            </div>-->\r\n\r\n\r\n            <div *ngIf=\"load\" class=\"lds-roller\" style=\"display: block;\r\n            margin-left: auto;\r\n            margin-right: auto;\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <p>Waiting for results ...</p>\r\n            </div>\r\n\r\n            <div *ngIf=\"!load&&res\" class=\"row\" style=\"margin-top: 20px;\">\r\n                <!--<div style=\"text-align: center;\">\r\n                    <h3>Your Results Are Now Available ! </h3>\r\n                </div>-->\r\n\r\n                <div class=\"col-md-6 \">\r\n                    <h4 style=\"text-align: center;\">Original Text</h4>\r\n                    <textarea id=\"inputnoneditable3\" rows=\"20 \">{{summary.text}}</textarea>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 \">\r\n                    <h4 style=\"text-align: center;\"> Summarized Text </h4>\r\n\r\n                    <textarea id=\"inputnoneditable3\" rows=\"20 \">{{summary.summarize}}</textarea>\r\n                </div>\r\n\r\n                <form (ngSubmit)=\"New()\">\r\n                    <button class=\"btn btn-success\" style=\"margin: 20px;float:left;\" type=\"submit\"> New Summarize !</button>\r\n                </form>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(public auth: AuthService, public router: Router) {}\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClientJsonpModule, HttpClient } from '@angular/common/http';\r\nimport {JwtHelperService} from '@auth0/angular-jwt';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  public jwtHelper: JwtHelperService = new JwtHelperService();\r\n  isAuth : boolean;\r\n  constructor(private http: HttpClient) { \r\n  }\r\n  ngOnInit(): void {\r\n        \r\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\r\n    //Add 'implements OnInit' to the class.\r\n  }\r\n  loginUser(user){\r\n    return this.http.post('http://localhost:8000/api/auth/login/', user);\r\n  }\r\n  isLoggedIn() : boolean {\r\n    let token = localStorage.getItem('token');\r\n    if (token) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  public isAuthenticated(): boolean {\r\n    const token = localStorage.getItem('token');\r\n    // Check whether the token is expired and return\r\n    // true or false\r\n    //this.isAuth = !this.jwtHelper.isTokenExpired(token);\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n\r\n\r\n  \r\n  isAdmin() {\r\n    let token = localStorage.getItem('token');\r\n    const helper = new JwtHelperService();\r\n    const decodedToken = helper.decodeToken(token);\r\n\r\n    if (token) {\r\n      let role = decodedToken.role;\r\n\r\n      if (role == \"admin\") {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n  isStudent() {\r\n    let token = localStorage.getItem('token');\r\n    const helper = new JwtHelperService();\r\n    const decodedToken = helper.decodeToken(token);\r\n\r\n    if (token) {\r\n      let role = decodedToken.role;\r\n\r\n      if (role == \"student\") {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient , HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n\r\n  constructor(private http:HttpClient ) { }\r\n\r\n  registerUser(userData): Observable  <any> {\r\n    return this.http.post<any>('http://localhost:8000/api/users/register/',userData);\r\n  }\r\n\r\n\r\n  posttext(text): Observable  <any> {\r\n    return this.http.post<any>('http://localhost:8000/summarize/text/',text);\r\n  }\r\n  Contextextraction(text):Observable <any>{\r\n    return this.http.post<any>('http://localhost:8000/context/lda/',text)\r\n  }\r\n\r\n\r\n\r\n  \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}